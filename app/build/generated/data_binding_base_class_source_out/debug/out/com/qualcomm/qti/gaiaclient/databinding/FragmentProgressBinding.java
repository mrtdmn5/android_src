// Generated by data binding compiler. Do not edit!
package com.qualcomm.qti.gaiaclient.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.qualcomm.qti.gaiaclient.R;
import com.qualcomm.qti.gaiaclient.ui.common.progress.ProgressFragmentViewData;
import com.qualcomm.qti.gaiaclient.ui.common.progress.ProgressViewData;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentProgressBinding extends ViewDataBinding {
  @NonNull
  public final Button cancel;

  @NonNull
  public final Button done;

  @NonNull
  public final Guideline horizontalGuideline;

  @NonNull
  public final ProgressBar progressBarDeterminate;

  @NonNull
  public final ProgressBar progressBarIndeterminate;

  @NonNull
  public final TextView progressMessage;

  @NonNull
  public final TextView progressStep;

  @NonNull
  public final TextView progressText;

  @Bindable
  protected ProgressViewData mProgress;

  @Bindable
  protected ProgressFragmentViewData mStaticData;

  @Bindable
  protected boolean mIsInProgress;

  @Bindable
  protected String mMessage;

  protected FragmentProgressBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button cancel, Button done, Guideline horizontalGuideline, ProgressBar progressBarDeterminate,
      ProgressBar progressBarIndeterminate, TextView progressMessage, TextView progressStep,
      TextView progressText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cancel = cancel;
    this.done = done;
    this.horizontalGuideline = horizontalGuideline;
    this.progressBarDeterminate = progressBarDeterminate;
    this.progressBarIndeterminate = progressBarIndeterminate;
    this.progressMessage = progressMessage;
    this.progressStep = progressStep;
    this.progressText = progressText;
  }

  public abstract void setProgress(@Nullable ProgressViewData progress);

  @Nullable
  public ProgressViewData getProgress() {
    return mProgress;
  }

  public abstract void setStaticData(@Nullable ProgressFragmentViewData staticData);

  @Nullable
  public ProgressFragmentViewData getStaticData() {
    return mStaticData;
  }

  public abstract void setIsInProgress(boolean isInProgress);

  public boolean getIsInProgress() {
    return mIsInProgress;
  }

  public abstract void setMessage(@Nullable String message);

  @Nullable
  public String getMessage() {
    return mMessage;
  }

  @NonNull
  public static FragmentProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_progress, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentProgressBinding>inflateInternal(inflater, R.layout.fragment_progress, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentProgressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_progress, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentProgressBinding>inflateInternal(inflater, R.layout.fragment_progress, null, false, component);
  }

  public static FragmentProgressBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentProgressBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentProgressBinding)bind(component, view, R.layout.fragment_progress);
  }
}
