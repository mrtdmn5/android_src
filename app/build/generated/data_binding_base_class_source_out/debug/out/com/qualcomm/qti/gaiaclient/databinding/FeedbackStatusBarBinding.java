// Generated by data binding compiler. Do not edit!
package com.qualcomm.qti.gaiaclient.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.qualcomm.qti.gaiaclient.R;
import com.qualcomm.qti.gaiaclient.ui.feedback.FeedbackStatus;
import com.qualcomm.qti.gaiaclient.ui.feedback.SendFeedbackViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FeedbackStatusBarBinding extends ViewDataBinding {
  @NonNull
  public final TextView content;

  @NonNull
  public final ImageView image;

  @NonNull
  public final Button primaryAction;

  @NonNull
  public final CircularProgressIndicator progress;

  @NonNull
  public final TextView refs;

  @NonNull
  public final Button secondaryAction;

  @NonNull
  public final TextView title;

  @Bindable
  protected FeedbackStatus mData;

  @Bindable
  protected SendFeedbackViewModel mViewModel;

  protected FeedbackStatusBarBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView content, ImageView image, Button primaryAction, CircularProgressIndicator progress,
      TextView refs, Button secondaryAction, TextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.content = content;
    this.image = image;
    this.primaryAction = primaryAction;
    this.progress = progress;
    this.refs = refs;
    this.secondaryAction = secondaryAction;
    this.title = title;
  }

  public abstract void setData(@Nullable FeedbackStatus data);

  @Nullable
  public FeedbackStatus getData() {
    return mData;
  }

  public abstract void setViewModel(@Nullable SendFeedbackViewModel viewModel);

  @Nullable
  public SendFeedbackViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FeedbackStatusBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.feedback_status_bar, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FeedbackStatusBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FeedbackStatusBarBinding>inflateInternal(inflater, R.layout.feedback_status_bar, root, attachToRoot, component);
  }

  @NonNull
  public static FeedbackStatusBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.feedback_status_bar, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FeedbackStatusBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FeedbackStatusBarBinding>inflateInternal(inflater, R.layout.feedback_status_bar, null, false, component);
  }

  public static FeedbackStatusBarBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FeedbackStatusBarBinding bind(@NonNull View view, @Nullable Object component) {
    return (FeedbackStatusBarBinding)bind(component, view, R.layout.feedback_status_bar);
  }
}
