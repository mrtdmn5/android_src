// Generated by data binding compiler. Do not edit!
package com.qualcomm.qti.gaiaclient.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.qualcomm.qti.gaiaclient.R;
import com.qualcomm.qti.gaiaclient.ui.information.InformationViewData;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentInformationBinding extends ViewDataBinding {
  @NonNull
  public final TextView connectionState;

  @NonNull
  public final TextView deviceAddress;

  @NonNull
  public final TextView deviceApplicationBuildId;

  @NonNull
  public final TextView deviceApplicationVersion;

  @NonNull
  public final TextView deviceBatteryLevelCase;

  @NonNull
  public final TextView deviceBatteryLevelDevice;

  @NonNull
  public final TextView deviceBatteryLevelLeft;

  @NonNull
  public final TextView deviceBatteryLevelRight;

  @NonNull
  public final TextView deviceBatteryLevelTitle;

  @NonNull
  public final TextView deviceCharging;

  @NonNull
  public final TextView deviceGaiaVersion;

  @NonNull
  public final ImageView deviceImage;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final TextView deviceSerialNumber;

  @NonNull
  public final TextView deviceSerialNumberEarbudLeft;

  @NonNull
  public final TextView deviceSerialNumberEarbudRight;

  @NonNull
  public final TextView deviceSerialNumberTitle;

  @NonNull
  public final TextView deviceVariantName;

  @Bindable
  protected InformationViewData mInformation;

  protected FragmentInformationBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView connectionState, TextView deviceAddress, TextView deviceApplicationBuildId,
      TextView deviceApplicationVersion, TextView deviceBatteryLevelCase,
      TextView deviceBatteryLevelDevice, TextView deviceBatteryLevelLeft,
      TextView deviceBatteryLevelRight, TextView deviceBatteryLevelTitle, TextView deviceCharging,
      TextView deviceGaiaVersion, ImageView deviceImage, TextView deviceName,
      TextView deviceSerialNumber, TextView deviceSerialNumberEarbudLeft,
      TextView deviceSerialNumberEarbudRight, TextView deviceSerialNumberTitle,
      TextView deviceVariantName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.connectionState = connectionState;
    this.deviceAddress = deviceAddress;
    this.deviceApplicationBuildId = deviceApplicationBuildId;
    this.deviceApplicationVersion = deviceApplicationVersion;
    this.deviceBatteryLevelCase = deviceBatteryLevelCase;
    this.deviceBatteryLevelDevice = deviceBatteryLevelDevice;
    this.deviceBatteryLevelLeft = deviceBatteryLevelLeft;
    this.deviceBatteryLevelRight = deviceBatteryLevelRight;
    this.deviceBatteryLevelTitle = deviceBatteryLevelTitle;
    this.deviceCharging = deviceCharging;
    this.deviceGaiaVersion = deviceGaiaVersion;
    this.deviceImage = deviceImage;
    this.deviceName = deviceName;
    this.deviceSerialNumber = deviceSerialNumber;
    this.deviceSerialNumberEarbudLeft = deviceSerialNumberEarbudLeft;
    this.deviceSerialNumberEarbudRight = deviceSerialNumberEarbudRight;
    this.deviceSerialNumberTitle = deviceSerialNumberTitle;
    this.deviceVariantName = deviceVariantName;
  }

  public abstract void setInformation(@Nullable InformationViewData information);

  @Nullable
  public InformationViewData getInformation() {
    return mInformation;
  }

  @NonNull
  public static FragmentInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_information, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentInformationBinding>inflateInternal(inflater, R.layout.fragment_information, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_information, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentInformationBinding>inflateInternal(inflater, R.layout.fragment_information, null, false, component);
  }

  public static FragmentInformationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentInformationBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentInformationBinding)bind(component, view, R.layout.fragment_information);
  }
}
