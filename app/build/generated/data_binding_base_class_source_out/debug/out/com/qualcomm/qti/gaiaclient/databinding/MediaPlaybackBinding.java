// Generated by data binding compiler. Do not edit!
package com.qualcomm.qti.gaiaclient.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.qualcomm.qti.gaiaclient.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class MediaPlaybackBinding extends ViewDataBinding {
  @NonNull
  public final Guideline horizontalGuideline;

  @NonNull
  public final ImageView prefNextTrack;

  @NonNull
  public final ImageView prefPause;

  @NonNull
  public final ImageView prefPlay;

  @NonNull
  public final ImageView prefPreviousTrack;

  @NonNull
  public final ImageView prefVolumeDown;

  @NonNull
  public final ImageView prefVolumeUp;

  @NonNull
  public final Guideline verticalGuideline;

  protected MediaPlaybackBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Guideline horizontalGuideline, ImageView prefNextTrack, ImageView prefPause,
      ImageView prefPlay, ImageView prefPreviousTrack, ImageView prefVolumeDown,
      ImageView prefVolumeUp, Guideline verticalGuideline) {
    super(_bindingComponent, _root, _localFieldCount);
    this.horizontalGuideline = horizontalGuideline;
    this.prefNextTrack = prefNextTrack;
    this.prefPause = prefPause;
    this.prefPlay = prefPlay;
    this.prefPreviousTrack = prefPreviousTrack;
    this.prefVolumeDown = prefVolumeDown;
    this.prefVolumeUp = prefVolumeUp;
    this.verticalGuideline = verticalGuideline;
  }

  @NonNull
  public static MediaPlaybackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.media_playback, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MediaPlaybackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MediaPlaybackBinding>inflateInternal(inflater, R.layout.media_playback, root, attachToRoot, component);
  }

  @NonNull
  public static MediaPlaybackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.media_playback, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MediaPlaybackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MediaPlaybackBinding>inflateInternal(inflater, R.layout.media_playback, null, false, component);
  }

  public static MediaPlaybackBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MediaPlaybackBinding bind(@NonNull View view, @Nullable Object component) {
    return (MediaPlaybackBinding)bind(component, view, R.layout.media_playback);
  }
}
